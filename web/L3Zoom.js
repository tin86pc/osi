/*!
 * @license
 * chartjs-plugin-zoom
 * http://chartjs.org/
 * Version: 0.7.7
 *
 * Copyright 2020 Chart.js Contributors
 * Released under the MIT license
 * https://github.com/chartjs/chartjs-plugin-zoom/blob/master/LICENSE.md
 */
!function (e, o) { "object" == typeof exports && "undefined" != typeof module ? module.exports = o(require("chart.js"), require("hammerjs")) : "function" == typeof define && define.amd ? define(["chart.js", "hammerjs"], o) : (e = e || self).ChartZoom = o(e.Chart, e.Hammer) }(this, (function (e, o) { "use strict"; e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e, o = o && Object.prototype.hasOwnProperty.call(o, "default") ? o.default : o; var t = e.helpers, n = e.Zoom = e.Zoom || {}, a = n.zoomFunctions = n.zoomFunctions || {}, i = n.panFunctions = n.panFunctions || {}; function r(e, o) { var n = {}; void 0 !== e.options.pan && (n.pan = e.options.pan), void 0 !== e.options.zoom && (n.zoom = e.options.zoom); var a = e.$zoom; o = a._options = t.merge({}, [o, n]); var i = a._node, r = o.zoom && o.zoom.enabled, l = o.zoom.drag; r && !l ? i.addEventListener("wheel", a._wheelHandler) : i.removeEventListener("wheel", a._wheelHandler), r && l ? (i.addEventListener("mousedown", a._mouseDownHandler), i.ownerDocument.addEventListener("mouseup", a._mouseUpHandler)) : (i.removeEventListener("mousedown", a._mouseDownHandler), i.removeEventListener("mousemove", a._mouseMoveHandler), i.ownerDocument.removeEventListener("mouseup", a._mouseUpHandler)) } function l(e) { var o = e.$zoom._originalOptions; t.each(e.scales, (function (e) { o[e.id] || (o[e.id] = t.clone(e.options)) })), t.each(o, (function (t, n) { e.scales[n] || delete o[n] })) } function m(e, o, t) { return void 0 === e || ("string" == typeof e ? -1 !== e.indexOf(o) : "function" == typeof e && -1 !== e({ chart: t }).indexOf(o)) } function s(e, o, n, a) { if (o.enabled && o.overScaleMode) { var i = function (e, o, t) { for (var n = e.scales, a = Object.keys(n), i = 0; i < a.length; i++) { var r = n[a[i]]; if (t >= r.top && t <= r.bottom && o >= r.left && o <= r.right) return r } return null }(e, n, a), r = "function" == typeof o.overScaleMode ? o.overScaleMode({ chart: e }, i) : o.overScaleMode; if (i && m(r, i.isHorizontal() ? "x" : "y", e)) return [i]; var l = []; return t.each(e.scales, (function (o) { m(r, o.isHorizontal() ? "x" : "y", e) || l.push(o) })), l } return null } function c(e, o) { if (e.scaleAxes && e.rangeMax && !t.isNullOrUndef(e.rangeMax[e.scaleAxes])) { var n = e.rangeMax[e.scaleAxes]; o > n && (o = n) } return o } function u(e, o) { if (e.scaleAxes && e.rangeMin && !t.isNullOrUndef(e.rangeMin[e.scaleAxes])) { var n = e.rangeMin[e.scaleAxes]; o < n && (o = n) } return o } function d(e, o, t, n) { var a = e.max - e.min, i = a * (o - 1), r = e.isHorizontal() ? t.x : t.y, l = (e.getValueForPixel(r) - e.min) / a, m = i * l, s = i * (1 - l); e.options.ticks.min = u(n, e.min + m), e.options.ticks.max = c(n, e.max - s) } function p(e, o, t, n) { var i = a[e.type]; i && i(e, o, t, n) } function f(e, o, n, a, i, r) { var c = e.chartArea; a || (a = { x: (c.left + c.right) / 2, y: (c.top + c.bottom) / 2 }); var u = e.$zoom._options.zoom; if (u.enabled) { l(e); var d, f = "function" == typeof u.mode ? u.mode({ chart: e }) : u.mode; d = "xy" === f && void 0 !== i ? i : "xy"; var v = s(e, u, a.x, a.y); t.each(e.scales, (function (t) { v && -1 === v.indexOf(t) || (t.isHorizontal() && m(f, "x", e) && m(d, "x", e) ? (u.scaleAxes = "x", p(t, o, a, u)) : !t.isHorizontal() && m(f, "y", e) && m(d, "y", e) && (u.scaleAxes = "y", p(t, n, a, u))) })), r ? e.update({ duration: r, easing: "easeOutQuad" }) : e.update(0), "function" == typeof u.onZoom && u.onZoom({ chart: e }) } } function v(e, o, n) { var a, i = e.options.ticks, r = e.min, l = e.max, m = e.getValueForPixel(e.getPixelForValue(r) - o), s = e.getValueForPixel(e.getPixelForValue(l) - o), c = m = m.valueOf ? m.valueOf() : m, u = s = s.valueOf ? s.valueOf() : s; n.scaleAxes && n.rangeMin && !t.isNullOrUndef(n.rangeMin[n.scaleAxes]) && (c = n.rangeMin[n.scaleAxes]), n.scaleAxes && n.rangeMax && !t.isNullOrUndef(n.rangeMax[n.scaleAxes]) && (u = n.rangeMax[n.scaleAxes]), m >= c && s <= u ? (i.min = m, i.max = s) : m < c ? (a = r - c, i.min = c, i.max = l - a) : s > u && (a = u - l, i.max = u, i.min = r + a) } function h(e, o, t) { var n = i[e.type]; n && n(e, o, t) } e.Zoom.defaults = e.defaults.global.plugins.zoom = { pan: { enabled: !1, mode: "xy", speed: 20, threshold: 10 }, zoom: { enabled: !1, mode: "xy", sensitivity: 3, speed: .1 } }, n.zoomFunctions.category = function (e, o, t, a) { var i = e.chart.data.labels, r = e.minIndex, l = i.length - 1, m = e.maxIndex, s = a.sensitivity, d = e.isHorizontal() ? e.left + e.width / 2 : e.top + e.height / 2, p = e.isHorizontal() ? t.x : t.y; n.zoomCumulativeDelta = o > 1 ? n.zoomCumulativeDelta + 1 : n.zoomCumulativeDelta - 1, Math.abs(n.zoomCumulativeDelta) > s && (n.zoomCumulativeDelta < 0 ? (p >= d ? r <= 0 ? m = Math.min(l, m + 1) : r = Math.max(0, r - 1) : p < d && (m >= l ? r = Math.max(0, r - 1) : m = Math.min(l, m + 1)), n.zoomCumulativeDelta = 0) : n.zoomCumulativeDelta > 0 && (p >= d ? r = r < m ? r = Math.min(m, r + 1) : r : p < d && (m = m > r ? m = Math.max(r, m - 1) : m), n.zoomCumulativeDelta = 0), e.options.ticks.min = u(a, i[r]), e.options.ticks.max = c(a, i[m])) }, n.zoomFunctions.time = function (e, o, t, n) { d(e, o, t, n); var a = e.options; a.time && (a.time.min && (a.time.min = a.ticks.min), a.time.max && (a.time.max = a.ticks.max)) }, n.zoomFunctions.linear = d, n.zoomFunctions.logarithmic = d, n.panFunctions.category = function (e, o, t) { var a, i = e.chart.data.labels, r = i.length - 1, l = Math.max(e.ticks.length, 1), m = t.speed, s = e.minIndex, d = Math.round(e.width / (l * m)); n.panCumulativeDelta += o, s = n.panCumulativeDelta > d ? Math.max(0, s - 1) : n.panCumulativeDelta < -d ? Math.min(r - l + 1, s + 1) : s, n.panCumulativeDelta = s !== e.minIndex ? 0 : n.panCumulativeDelta, a = Math.min(r, s + l - 1), e.options.ticks.min = u(t, i[s]), e.options.ticks.max = c(t, i[a]) }, n.panFunctions.time = function (e, o, t) { v(e, o, t); var n = e.options; n.time && (n.time.min && (n.time.min = n.ticks.min), n.time.max && (n.time.max = n.ticks.max)) }, n.panFunctions.linear = v, n.panFunctions.logarithmic = v, n.panCumulativeDelta = 0, n.zoomCumulativeDelta = 0; var x = { id: "zoom", afterInit: function (e) { e.resetZoom = function () { l(e); var o = e.$zoom._originalOptions; t.each(e.scales, (function (e) { var t = e.options.time, n = e.options.ticks; o[e.id] ? (t && (t.min = o[e.id].time.min, t.max = o[e.id].time.max), n && (n.min = o[e.id].ticks.min, n.max = o[e.id].ticks.max)) : (t && (delete t.min, delete t.max), n && (delete n.min, delete n.max)) })), e.update() } }, beforeUpdate: function (e, o) { r(e, o) }, beforeInit: function (e, a) { e.$zoom = { _originalOptions: {} }; var i = e.$zoom._node = e.ctx.canvas; r(e, a); var c = e.$zoom._options, u = c.pan && c.pan.threshold; e.$zoom._mouseDownHandler = function (o) { i.addEventListener("mousemove", e.$zoom._mouseMoveHandler), e.$zoom._dragZoomStart = o }, e.$zoom._mouseMoveHandler = function (o) { e.$zoom._dragZoomStart && (e.$zoom._dragZoomEnd = o, e.update(0)) }, e.$zoom._mouseUpHandler = function (o) { if (e.$zoom._dragZoomStart) { i.removeEventListener("mousemove", e.$zoom._mouseMoveHandler); var t = e.$zoom._dragZoomStart, n = t.target.getBoundingClientRect().left, a = Math.min(t.clientX, o.clientX) - n, r = Math.max(t.clientX, o.clientX) - n, l = t.target.getBoundingClientRect().top, s = Math.min(t.clientY, o.clientY) - l, u = r - a, d = Math.max(t.clientY, o.clientY) - l - s; e.$zoom._dragZoomStart = null, e.$zoom._dragZoomEnd = null; var p = c.zoom && c.zoom.threshold || 0; if (!(u <= p && d <= p)) { var v = e.chartArea, h = e.$zoom._options.zoom, x = v.right - v.left, g = m(h.mode, "x", e) && u ? 1 + (x - u) / x : 1, z = v.bottom - v.top, y = m(h.mode, "y", e); f(e, g, y && d ? 1 + (z - d) / z : 1, { x: (a - v.left) / (1 - u / x) + v.left, y: (s - v.top) / (1 - d / z) + v.top }, void 0, h.drag.animationDuration), "function" == typeof h.onZoomComplete && h.onZoomComplete({ chart: e }) } } }; var d = null; if (e.$zoom._wheelHandler = function (o) { if (o.cancelable && o.preventDefault(), void 0 !== o.deltaY) { var t = o.target.getBoundingClientRect(), n = { x: o.clientX - t.left, y: o.clientY - t.top }, a = e.$zoom._options.zoom, i = a.speed; o.deltaY >= 0 && (i = -i), f(e, 1 + i, 1 + i, n), clearTimeout(d), d = setTimeout((function () { "function" == typeof a.onZoomComplete && a.onZoomComplete({ chart: e }) }), 250) } }, o) { var p, v = new o.Manager(i); v.add(new o.Pinch), v.add(new o.Pan({ threshold: u })); var x = function (o) { var t = 1 / p * o.scale, n = o.target.getBoundingClientRect(), a = { x: o.center.x - n.left, y: o.center.y - n.top }, i = Math.abs(o.pointers[0].clientX - o.pointers[1].clientX), r = Math.abs(o.pointers[0].clientY - o.pointers[1].clientY), l = i / r; f(e, t, t, a, l > .3 && l < 1.7 ? "xy" : i > r ? "x" : "y"); var m = e.$zoom._options.zoom; "function" == typeof m.onZoomComplete && m.onZoomComplete({ chart: e }), p = o.scale }; v.on("pinchstart", (function () { p = 1 })), v.on("pinch", x), v.on("pinchend", (function (e) { x(e), p = null, n.zoomCumulativeDelta = 0 })); var g = null, z = null, y = !1, _ = null, M = function (o) { if (null !== g && null !== z) { y = !0; var n = o.deltaX - g, a = o.deltaY - z; g = o.deltaX, z = o.deltaY, function (e, o, n, a) { l(e); var i = e.$zoom._options.pan; if (i.enabled) { var r = "function" == typeof i.mode ? i.mode({ chart: e }) : i.mode; t.each(e.scales, (function (t) { a && -1 === a.indexOf(t) || (t.isHorizontal() && m(r, "x", e) && 0 !== o ? (i.scaleAxes = "x", h(t, o, i)) : !t.isHorizontal() && m(r, "y", e) && 0 !== n && (i.scaleAxes = "y", h(t, n, i))) })), e.update(0), "function" == typeof i.onPan && i.onPan({ chart: e }) } }(e, n, a, _) } }; v.on("panstart", (function (o) { var t = e.$zoom._options.pan; if (t.enabled) { var n = o.target.getBoundingClientRect(), a = o.center.x - n.left, i = o.center.y - n.top; _ = s(e, t, a, i) } g = 0, z = 0, M(o) })), v.on("panmove", M), v.on("panend", (function () { _ = null, g = null, z = null, n.panCumulativeDelta = 0, setTimeout((function () { y = !1 }), 500); var o = e.$zoom._options.pan; "function" == typeof o.onPanComplete && o.onPanComplete({ chart: e }) })), e.$zoom._ghostClickHandler = function (e) { y && e.cancelable && (e.stopImmediatePropagation(), e.preventDefault()) }, i.addEventListener("click", e.$zoom._ghostClickHandler), e._mc = v } }, beforeDatasetsDraw: function (e) { var o = e.ctx; if (e.$zoom._dragZoomEnd) { var t = function (e) { for (var o = e.scales, t = Object.keys(o), n = 0; n < t.length; n++) { var a = o[t[n]]; if (a.isHorizontal()) return a } }(e), n = function (e) { for (var o = e.scales, t = Object.keys(o), n = 0; n < t.length; n++) { var a = o[t[n]]; if (!a.isHorizontal()) return a } }(e), a = e.$zoom._dragZoomStart, i = e.$zoom._dragZoomEnd, r = t.left, l = t.right, s = n.top, c = n.bottom; if (m(e.$zoom._options.zoom.mode, "x", e)) { var u = a.target.getBoundingClientRect().left; r = Math.min(a.clientX, i.clientX) - u, l = Math.max(a.clientX, i.clientX) - u } if (m(e.$zoom._options.zoom.mode, "y", e)) { var d = a.target.getBoundingClientRect().top; s = Math.min(a.clientY, i.clientY) - d, c = Math.max(a.clientY, i.clientY) - d } var p = l - r, f = c - s, v = e.$zoom._options.zoom.drag; o.save(), o.beginPath(), o.fillStyle = v.backgroundColor || "rgba(225,225,225,0.3)", o.fillRect(r, s, p, f), v.borderWidth > 0 && (o.lineWidth = v.borderWidth, o.strokeStyle = v.borderColor || "rgba(225,225,225)", o.strokeRect(r, s, p, f)), o.restore() } }, destroy: function (e) { if (e.$zoom) { var o = e.$zoom, t = o._node; t.removeEventListener("mousedown", o._mouseDownHandler), t.removeEventListener("mousemove", o._mouseMoveHandler), t.ownerDocument.removeEventListener("mouseup", o._mouseUpHandler), t.removeEventListener("wheel", o._wheelHandler), t.removeEventListener("click", o._ghostClickHandler), delete e.$zoom; var n = e._mc; n && (n.remove("pinchstart"), n.remove("pinch"), n.remove("pinchend"), n.remove("panstart"), n.remove("pan"), n.remove("panend"), n.destroy()) } } }; return e.plugins.register(x), x }));
